@using PNMT.ApiClient.Data;
@inject NavigationManager navigationManager
@inject PNMTDApi _PNTMDApi

@if (notFound)
{
    <MudAlert Severity="Severity.Error" Dense="true" Class="my-2">Not found</MudAlert>
}
<MudStack>
    <MudTextField @bind-Value="@searchString" Label="SecretToken" Variant="Variant.Outlined" OnKeyDown="OnKeyDown" Immediate="true"></MudTextField>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Button" OnClick="Search" Disabled="@buttonDisabled">Search</MudButton>
</MudStack>

@code {
    private string searchString;

    private bool notFound = false;

    private bool buttonDisabled = false;

    private async void OnKeyDown(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            Search();
        }
        else
        {
            notFound = false;
        }
    }


    private async void Search()
    {
        buttonDisabled = true;
        var result = await _PNTMDApi.Sensors.BySecretToken(searchString);

        if (result != null)
        {
            navigationManager.NavigateTo($"/sensor/{result.Id}");
        }
        else
        {
            notFound = true;
            buttonDisabled = false;
        }
        StateHasChanged();
    }


}
