@page "/host/{Id:guid}"
@attribute [Authorize]
@using PNMT.ApiClient.Data;
@using PNMT.WebApp.Components
@using PNMT.WebApp.Models.Forms;
@using PNMTD.Lib.Helper;
@using PNMTD.Lib.Models.Poco;
@using System.Text.Json;
@inject NavigationManager navigationManager
@inject PNMTDApi _PNTMDApi
@inject IDialogService DialogService

<MudContainer>
    <MudGrid>
        <MudItem xs="12">
            <MudGrid>
                <MudItem xs="12">
                    <MudPaper Class="pa-3 ma-2 mt-4"><h1>Host - <b>@hostPoco.Name</b></h1></MudPaper>
                </MudItem>
            </MudGrid>
        </MudItem>
    </MudGrid>
    <MudGrid>
        <MudItem lg="5" xs="12">
            <BigCardComp Title="Properties">
                <div class="pb-4">
                    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="DeleteHost">Delete</MudButton>
                </div>
                <table class="table table-bordered table-hover">
                    <thead>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Enabled</td>
                            <td><EditableTextComponent Entity="@hostPoco" TItem="bool" InputType="checkbox" @bind-Value="@hostPoco.Enabled"></EditableTextComponent></td>
                        </tr>
                        <tr>
                            <td>Name</td>
                            <td><b><EditableTextComponent Entity="@hostPoco" TItem="string" @bind-Value="@hostPoco.Name"></EditableTextComponent></b></td>
                        </tr>
                        <tr>
                            <td>Location</td>
                            <td><EditableTextComponent Entity="@hostPoco" TItem="string" @bind-Value="@hostPoco.Location"></EditableTextComponent></td>
                        </tr>
                        <tr>
                            <td>Notes</td>
                            <td><EditableTextComponent Entity="@hostPoco" TItem="string" @bind-Value="@hostPoco.Notes"></EditableTextComponent></td>
                        </tr>
                        <tr>
                            <td>Created</td>
                            <td>@hostPoco.Created</td>
                        </tr>
                    </tbody>
                </table>
            </BigCardComp>
        </MudItem>
        <MudItem lg="7" xs="12">
            <BigCardComp Title="Sensors">
                <div class="pb-4">
                    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Secondary" Href="@($"/sensor/new/{hostPoco.Id}")">Create</MudButton>
                </div>
                <table class="table table-hover table-striped">
                    <thead class="thead-small">
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">Name</th>
                            <th scope="col">Code</th>
                            <th scope="col">Msg</th>
                            <th scope="col">Up (24h)</th>
                            <th scope="col">Up (30d)</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var sensor in hostStatePoco.Sensors)
                        {
                            <tr>
                                <td>
                                    @if (sensor.Enabled)
                                    {
                                        @if (sensor.IsSuccess)
                                        {
                                            <MudIcon Icon="@Icons.Material.Filled.CheckBox" Color="Color.Success"></MudIcon>
                                        }
                                        else
                                        {
                                            <MudIcon Icon="@Icons.Material.Filled.Error" Color="Color.Error"></MudIcon>
                                        }
                                    }
                                    else
                                    {
                                        <MudIcon Icon="@Icons.Material.Filled.PowerOff" Color="Color.Default"></MudIcon>
                                    }

                                </td>
                                <td>
                                    <MudLink Href="@($"/sensor/{sensor.Id}")">@sensor.Name</MudLink>

                                </td>
                                <td>@sensor.LastCode</td>
                                <td>@sensor.LastMessage</td>
                                <td>@(string.Format("{0:0.00}", sensor.UpTime24h)) %</td>
                                <td>@(string.Format("{0:0.00}", sensor.UpTime30days)) %</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </BigCardComp>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    [Parameter]
    public Guid Id { get; set; }

    public HostPoco hostPoco = new HostPoco();

    public HostStatePoco hostStatePoco = new HostStatePoco();

    protected override async Task OnInitializedAsync()
    {
        hostPoco = (await _PNTMDApi.Hosts.Get(Id));

        hostStatePoco = (await _PNTMDApi.Hosts.GetHostWithSensors(Id));

        await base.OnInitializedAsync();
    }


    private async void DeleteHost()
    {
        DialogHelper.ShowDeleteDialog(DialogService, async () =>
        {
            await _PNTMDApi.Hosts.Delete(Id);
            navigationManager.NavigateTo("/hosts");
        });
    }


}
