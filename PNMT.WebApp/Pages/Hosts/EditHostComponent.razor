@page "/host/new"
@page "/host/edit/{Id:guid}"
@attribute [Authorize]
@inject ILogger<EditHostComponent> Logger
@using PNMT.ApiClient.Data;
@using PNMT.WebApp.Models.Forms;
@using PNMTD.Lib.Helper;
@using PNMTD.Lib.Models.Poco;
@inject NavigationManager navigationManager
@inject PNMTDApi _PNTMDApi
@attribute [Authorize]


<h3>@Title</h3>

<MudContainer>
<MudGrid>
    <MudItem xs="12">
        <MudPaper Class="pa-3 ma-2 mt-4">
            <h1>New Host</h1>
        </MudPaper>
    </MudItem>
</MudGrid>

<EditForm Model="@hostForm" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="InvalidSubmit">
    <DataAnnotationsValidator />
    @if (!ValidForm)
    {
        <MudAlert Severity="Severity.Error" Dense="true" Class="my-2"><ValidationSummary /></MudAlert>
    }
    <MudStack>
        <MudCheckBox @bind-Checked="@hostForm.Enabled" Label="Enabled"></MudCheckBox>
        <MudTextField @bind-Value="hostForm.Name" Label="Name" Variant="Variant.Outlined"></MudTextField>
        <MudTextField @bind-Value="hostForm.Location" Label="Location" Variant="Variant.Outlined"></MudTextField>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" ButtonType="ButtonType.Submit">@("Create")</MudButton>
        </MudStack>
    </EditForm>
</MudContainer>



@code {

    [Parameter]
    public Guid? Id { get; set; }

    public HostForm hostForm = new HostForm();

    bool ValidForm = true;

    public string Title => Id == null ? "Add Host" : "Edit Host";

    protected override async Task OnInitializedAsync()
    {
        if (Id.HasValue)
        {
            hostForm = (await _PNTMDApi.Hosts.Get(Id.Value)).MapPropertiesTo<HostPoco, HostForm>();
        }

        await base.OnInitializedAsync();
    }

    private async void HandleValidSubmit()
    {
        if (Id.HasValue)
        {
            await _PNTMDApi.Hosts.Update(hostForm.MapPropertiesTo<HostForm, HostPoco>());
            navigationManager.NavigateTo("/hosts");
        }
        else
        {
            await _PNTMDApi.Hosts.AddNew(hostForm.MapPropertiesTo<HostForm, HostPoco>());
            navigationManager.NavigateTo("/hosts");
        }
    }

    private void InvalidSubmit()
    {
        ValidForm = false;
    }
}
