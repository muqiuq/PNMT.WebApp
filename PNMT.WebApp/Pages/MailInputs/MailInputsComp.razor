@page "/mailinputs"
@attribute [Authorize]
@using PNMT.ApiClient.Data;
@using PNMT.WebApp.Components;
@using PNMT.WebApp.Models.Forms;
@using PNMTD.Lib.Helper;
@using PNMTD.Lib.Models.Enum;
@using PNMTD.Lib.Models.Poco;
@inject NavigationManager navigationManager
@inject PNMTDApi _PNTMDApi
@inject IDialogService DialogService

<MudOverlay Visible="isLoading" DarkBackground="true" Absolute="true">
    <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
</MudOverlay>

<MudContainer>
    <MudGrid>
        <MudItem xs="12">
            <MudPaper Class="pa-3 mb-1 mt-4">
                <div class="d-flex">
                    <div class="d-inline"><h1><MudIcon Icon="@Icons.Material.Filled.Notifications" Class="icon-base-more-space"></MudIcon></h1></div>
                    <div class="d-inline">
                        <h1>
                            Mail Inputs
                        </h1>
                    </div>
                </div>
            </MudPaper>
        </MudItem>
    </MudGrid>
    <div class="pa-3 mb-1 mb-2">
        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Success" Href="/mailinput/new">
            Create new
        </MudButton>
    </div>

    <MudDataGrid Items="@MailInputs">
        <Columns>
            <TemplateColumn Title="Name">
                <CellTemplate>
                    <a href="/mailinput/edit/@context.Item.Id">
                        @context.Item.Name
                        <MudIcon Icon="@Icons.Material.Filled.OpenInFull" Class="icon icon-base icon-base-just-bit-smaller icon-base-some-space-left" />
                    </a>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Enabled">
                <CellTemplate>
                    <EditableTextComponent Entity="@context.Item" TItem="bool" InputType="checkbox" @bind-Value="@context.Item.Enabled"></EditableTextComponent>
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Sender">
                <CellTemplate>
                    <EditableTextComponent Entity="@context.Item" TItem="string" InputType="string" @bind-Value="@context.Item.FromTest"></EditableTextComponent>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>

    <MudGrid>
        <MudItem xs="12">
            <MudPaper Class="pa-3 mb-1 mt-4">
                <div class="d-flex">
                    <div class="d-inline"><h1><MudIcon Icon="@Icons.Material.Filled.List" Class="icon-base-more-space"></MudIcon></h1></div>
                    <div class="d-inline">
                        <h1>
                            Mail log
                        </h1>
                    </div>
                </div>
            </MudPaper>
        </MudItem>
    </MudGrid>
    <MudDataGrid Items="@MailLogs">
        <Columns>
            <TemplateColumn Title="*" Sortable="false">
                <CellTemplate>
                    <MudLink OnClick="@(() => OpenMailLogDetails(context.Item))"><MudIcon Icon="@Icons.Material.Filled.OpenInNew" /></MudLink>
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn Property="x => x.Created" />
            <PropertyColumn Property="x => x.From" />
            <PropertyColumn Property="x => x.To" />
            <TemplateColumn Title="Subject">
                <CellTemplate>
                    @context.Item.Subject.Truncate(20)
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="Subject">
                <CellTemplate>
                    @context.Item.Content.Truncate(20)
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn Property="x => x.Processed" />
            <PropertyColumn Property="x => x.ProcessedById" />
        </Columns>
    </MudDataGrid>
</MudContainer>


@code {
    List<MailInputRulePoco> MailInputs = new List<MailInputRulePoco>();

    List<MailLogPoco> MailLogs = new List<MailLogPoco>();

    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        MailInputs = (await _PNTMDApi.MailInputs.GetAll()).ToList();

        MailLogs = (await _PNTMDApi.MailLogs.GetAll()).ToList();

        isLoading = false;

    }

    private void OpenMailLogDetails(MailLogPoco mailLogPoco)
    {
        MailLogDialog.Show(DialogService, mailLogPoco);
    }
}
