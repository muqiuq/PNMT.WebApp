@page "/"
@using PNMT.ApiClient.Data;
@using PNMT.WebApp.Pages.Sensors
@using PNMTD.Lib.Models.Poco;
@using PNMT.WebApp.Components.Dashboard;
@using PNMT.WebApp.Components;
@inject NavigationManager navigationManager
@inject PNMTDApi _PNTMDApi
@attribute [Authorize]

<PageTitle>PNMT</PageTitle>

<MudOverlay Visible="isLoading" DarkBackground="true" Absolute="true">
    <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
</MudOverlay>

<MudContainer>
    <MudGrid>
        <CardDashboardComp Icon="@Icons.Material.Filled.Router" Title="Hosts" Value="@NumberOfHosts"></CardDashboardComp>
        <CardDashboardComp Icon="@Icons.Material.Filled.Thermostat" Title="Sensors" Value="@NumberOfSensors"></CardDashboardComp>
        <CardDashboardComp Icon="@Icons.Material.Filled.Dangerous" LeftBoarderCss="border-left-danger" TitleCss="mud-error-text" Title="Failures" Value="@allHostsWithErrors.Count()"></CardDashboardComp>
    </MudGrid>

    <MudGrid>
        <MudItem lg="6" xs="12">

            @if (allHostsWithErrors?.Count == 0 && uplinkState.IsUp)
            {
                <div class="card shadow mb-4">
                    <div class="card-body">
                        <h1>Everything is fine</h1>
                    </div>
                </div>
                    
            }
            @if(!uplinkState.IsUp)
            {
                <div class="card shadow mb-4">
                    <div class="card-body">
                        <div class="d-flex">
                            <div class="d-inline"><h1><MudIcon Icon="@Icons.Material.Filled.OfflineBolt" Class="icon-base-more-space"></MudIcon></h1></div>
                            <div class="d-inline">
                                <h1>
                                    Uplink failure
                                </h1>
                                <p><i>
                                        LastRun: @uplinkState.LastRun <br/> 
                                        LastSuccessfullRun: @uplinkState.LastSuccessfullRun
                                </i>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @foreach (var host in allHostsWithErrors)
            {
                <div class="card shadow mb-4">
                    <div class="card-header py-3 d-flex flex-row align-items-center justify-space-between">
                        <h2 class="m-0 font-weight-bold mud-error-text">
                            <MudIcon Icon="@Icons.Material.Filled.Dangerous" Class="icon-pos-fix-2" />
                            <b>@host.Name</b>
                        </h2>
                        <MudLink Href="@($"/host/{host.Id}")" Class="object-right">
                            <MudIcon Icon="@Icons.Material.Filled.OpenInNew"></MudIcon>
                        </MudLink>
                    </div>
                    <div class="card-body">
                        <table class="table table-bordered table-hover table-striped">
                            <thead class="thead-small">
                                <tr>
                                    <th>Name</th>
                                    <th>Code</th>
                                    <th>Since</th>
                                    <th>Up (24h)</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var sensor in host.Sensors.Where(s => !s.IsSuccess && !s.Ignore).ToList())
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex">
                                                <div class="d-inline"><MudIcon Icon="@Icons.Material.Filled.Sensors" Class="text-grey-700 icon-pos-fix-2 icon-base-some-space"></MudIcon></div>
                                                <div class="d-inline"><MudLink Href="@($"/sensor/{sensor.Id}")">@sensor.Name</MudLink></div>
                                            </div>
                                        </td>
                                        <td>@sensor.LastCode</td>
                                        <td><b><SinceComp Moment="@(sensor.Since.Value)"></SinceComp></b></td>
                                        <td>@(string.Format("{0:0.00}", sensor.UpTime24h)) %</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h2 class="m-0 font-weight-bold text-primary">
                        <MudIcon Icon="@Icons.Material.Filled.History" Class="icon-pos-fix-2" />
                        <b>Last error events</b>
                    </h2>
                </div>
                <div class="card-body">
                    <div class="card-body">
                        <table class="table table-bordered table-hover table-striped">
                            <thead class="thead-small">
                                <tr>
                                    <th>Host</th>
                                    <th>Sensor</th>
                                    <th>Code</th>
                                    <th>Since</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var e in lastFewEventsWithError)
                                {
                                    <tr>
                                        <td>
                                            <MudLink Href="@($"/host/{e.HostId}")">@e.HostName</MudLink>
                                        </td>
                                        <td>
                                            <MudLink Href="@($"/sensor/{e.SensorId}")">@e.SensorName</MudLink>
                                        </td>
                                        <td>@e.StatusCode</td>
                                        <td><b><SinceComp Moment="@(e.Created)" Prepend="" Append="ago"></SinceComp></b></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </MudItem>
        <MudItem lg="6" xs="12">
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h2 class="m-0 font-weight-bold text-primary">
                        <MudIcon Icon="@Icons.Material.Filled.DeviceHub" Class="icon-pos-fix-2" />
                        <b>Hosts</b>
                    </h2>
                </div>
                <div class="card-body">
                    <table class="table table-bordered table-hover table-striped">
                        <thead class="thead-small">
                            <tr>
                                <th>Name</th>
                                <th>Location</th>
                                <th>Sensors</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var host in allHosts)
                            {
                                <tr>
                                    <td><a href="/host/@host.Id">@host.Name</a></td>
                                    <td>@host.Location</td>
                                    <td>@host.Sensors.Count()</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card shadow mb-4">
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h2 class="m-0 font-weight-bold text-primary">
                        <MudIcon Icon="@Icons.Material.Filled.Search" Class="icon-pos-fix-2" />
                        <b>Search sensor</b>
                    </h2>
                </div>
                <div class="card-body">
                    <SearchBySecretTokenComp/>
                </div>
            </div>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    public bool isLoading { get; set; } = true;

    List<HostStatePoco> allHosts = new List<HostStatePoco>();

    UplinkStatePoco uplinkState = new UplinkStatePoco();

    List<EventEntityPoco> lastFewEventsWithError = new List<EventEntityPoco>();

    List<HostStatePoco> allHostsWithErrors
    {
        get
        {
            return allHosts.Where(h => h.State != HostState.Ok && h.Enabled).ToList();
        }
    }

    int NumberOfHosts
    {
        get
        {
            return allHosts.Count();
        }
    }

    int NumberOfSensors
    {
        get
        {
            return allHosts.SelectMany(x => x.Sensors).Count();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        allHosts = (await _PNTMDApi.Hosts.GetAllHostsWithSensors()).Where(h => h.Enabled).ToList();

        uplinkState = (await _PNTMDApi.GetUplinkState());

        lastFewEventsWithError = (await _PNTMDApi.Events.GetLastFewEventsWithError());

        await base.OnInitializedAsync();

        isLoading = false;
    }
}
